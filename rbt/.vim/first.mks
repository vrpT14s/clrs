let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/clrs/rbt
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 main.c
badd +491 term://~/clrs/rbt//26066:/bin/bash
badd +1 ~/unsortable-trash/imp/str-git
badd +35 ~/unsortable-trash/imp/str-git/rbt_helper.h
badd +0 makefile
argglobal
%argdel
$argadd main.c
edit main.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 79 + 120) / 240)
exe '2resize ' . ((&lines * 32 + 33) / 67)
exe 'vert 2resize ' . ((&columns * 80 + 120) / 240)
exe '3resize ' . ((&lines * 32 + 33) / 67)
exe 'vert 3resize ' . ((&columns * 79 + 120) / 240)
exe '4resize ' . ((&lines * 32 + 33) / 67)
exe 'vert 4resize ' . ((&columns * 160 + 120) / 240)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
122
normal! zo
124
normal! zo
130
normal! zo
141
normal! zo
150
normal! zo
152
normal! zo
158
normal! zo
163
normal! zo
170
normal! zo
195
normal! zo
202
normal! zo
let s:l = 123 - ((122 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 123
normal! 039|
wincmd w
argglobal
if bufexists(fnamemodify("makefile", ":p")) | buffer makefile | else | edit makefile | endif
if &buftype ==# 'terminal'
  silent file makefile
endif
balt ~/unsortable-trash/imp/str-git/rbt_helper.h
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 3 - ((2 * winheight(0) + 16) / 32)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 09|
lcd ~/clrs/rbt
wincmd w
argglobal
if bufexists(fnamemodify("~/unsortable-trash/imp/str-git/rbt_helper.h", ":p")) | buffer ~/unsortable-trash/imp/str-git/rbt_helper.h | else | edit ~/unsortable-trash/imp/str-git/rbt_helper.h | endif
if &buftype ==# 'terminal'
  silent file ~/unsortable-trash/imp/str-git/rbt_helper.h
endif
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
35
normal! zo
37
normal! zo
let s:l = 35 - ((25 * winheight(0) + 16) / 32)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 35
normal! 0
lcd ~/clrs/rbt
wincmd w
argglobal
if bufexists(fnamemodify("term://~/clrs/rbt//26066:/bin/bash", ":p")) | buffer term://~/clrs/rbt//26066:/bin/bash | else | edit term://~/clrs/rbt//26066:/bin/bash | endif
if &buftype ==# 'terminal'
  silent file term://~/clrs/rbt//26066:/bin/bash
endif
balt ~/clrs/rbt/main.c
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 3703 - ((31 * winheight(0) + 16) / 32)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3703
normal! 06|
wincmd w
4wincmd w
exe 'vert 1resize ' . ((&columns * 79 + 120) / 240)
exe '2resize ' . ((&lines * 32 + 33) / 67)
exe 'vert 2resize ' . ((&columns * 80 + 120) / 240)
exe '3resize ' . ((&lines * 32 + 33) / 67)
exe 'vert 3resize ' . ((&columns * 79 + 120) / 240)
exe '4resize ' . ((&lines * 32 + 33) / 67)
exe 'vert 4resize ' . ((&columns * 160 + 120) / 240)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
